// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolderingStation.DAL.Implementation;

#nullable disable

namespace SolderingStation.DAL.Implementation.Migrations
{
    [DbContext(typeof(SolderingStationDbContext))]
    [Migration("20230601063104_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("SolderingStation.Entities.LanguageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NativeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("SolderingStation.Entities.ProfileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SolderingStation.Entities.SerialConnectionParametersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaudRate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DataBits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Parity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProfileEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StopBits")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProfileEntityId");

                    b.ToTable("SerialConnectionsParameters");
                });

            modelBuilder.Entity("SolderingStation.Entities.TemperatureMeasurementPointEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("SecondsElapsed")
                        .HasColumnType("REAL");

                    b.Property<ushort>("Temperature")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ThermalProfilePartEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ThermalProfilePartEntityId");

                    b.ToTable("TemperatureMeasurementPoints");
                });

            modelBuilder.Entity("SolderingStation.Entities.ThermalProfileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProfileEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProfileEntityId");

                    b.ToTable("ThermalProfiles");
                });

            modelBuilder.Entity("SolderingStation.Entities.ThermalProfilePartEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ThermalProfileEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ThermalProfileEntityId");

                    b.ToTable("ThermalProfileParts");
                });

            modelBuilder.Entity("SolderingStation.Entities.ProfileEntity", b =>
                {
                    b.HasOne("SolderingStation.Entities.LanguageEntity", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("SolderingStation.Entities.SerialConnectionParametersEntity", b =>
                {
                    b.HasOne("SolderingStation.Entities.ProfileEntity", null)
                        .WithMany("SerialConnectionsParameters")
                        .HasForeignKey("ProfileEntityId");
                });

            modelBuilder.Entity("SolderingStation.Entities.TemperatureMeasurementPointEntity", b =>
                {
                    b.HasOne("SolderingStation.Entities.ThermalProfilePartEntity", null)
                        .WithMany("TemperatureCurve")
                        .HasForeignKey("ThermalProfilePartEntityId");
                });

            modelBuilder.Entity("SolderingStation.Entities.ThermalProfileEntity", b =>
                {
                    b.HasOne("SolderingStation.Entities.ProfileEntity", null)
                        .WithMany("ThermalProfiles")
                        .HasForeignKey("ProfileEntityId");
                });

            modelBuilder.Entity("SolderingStation.Entities.ThermalProfilePartEntity", b =>
                {
                    b.HasOne("SolderingStation.Entities.ThermalProfileEntity", null)
                        .WithMany("Parts")
                        .HasForeignKey("ThermalProfileEntityId");
                });

            modelBuilder.Entity("SolderingStation.Entities.ProfileEntity", b =>
                {
                    b.Navigation("SerialConnectionsParameters");

                    b.Navigation("ThermalProfiles");
                });

            modelBuilder.Entity("SolderingStation.Entities.ThermalProfileEntity", b =>
                {
                    b.Navigation("Parts");
                });

            modelBuilder.Entity("SolderingStation.Entities.ThermalProfilePartEntity", b =>
                {
                    b.Navigation("TemperatureCurve");
                });
#pragma warning restore 612, 618
        }
    }
}
